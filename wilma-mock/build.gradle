/*==========================================================================
Copyright 2015 EPAM Systems

This file is part of Wilma.

Wilma is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Wilma is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Wilma.  If not, see <http://www.gnu.org/licenses/>.
===========================================================================*/

description = "wilma-mock"

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'application'
apply plugin: 'checkstyle'

group = 'com.epam.wilma.mock'
version = "$wilmaVersion"

sourceCompatibility = 1.7
targetCompatibility = 1.7

mainClassName = 'com.epam.wilma.mock.client.WilmaMock'

jar {
    manifest.attributes( 'provider': 'gradle')
    manifest.attributes( 'Main-Class': mainClassName)
    manifest.attributes( 'Implementation-Title': "$componentName-v$version"+'.'+"$buildNumber")
} 

repositories {
     maven { url "http://repo.maven.apache.org/maven2" }
}
dependencies {
    compile group: 'org.slf4j', name: 'slf4j-api', version:'1.7.5'
    compile group: 'ch.qos.logback', name: 'logback-classic', version:'1.0.12'
    compile group: 'commons-httpclient', name: 'commons-httpclient', version:'3.1'
    compile group: 'commons-io', name: 'commons-io', version:'2.4'
    compile group: 'commons-validator', name: 'commons-validator', version:'1.4.1'
    compile group: 'org.json', name: 'json', version:'20141113'
    compile group: 'com.google.guava', name: 'guava', version: '18.0'
    testCompile group: 'org.mockito', name: 'mockito-all', version:'1.9.5'
    testCompile group: 'org.testng', name: 'testng', version:'6.8.5'
}

checkstyle.configFile = file("$rootProject.rootDir/config/checkstyle/checkstyle.xml")
checkstyle.configProperties = ['samedir' : "$rootProject.rootDir/config/checkstyle"]
checkstyle.toolVersion = '5.6'
checkstyle.ignoreFailures = true

task jacocoReport(type: JacocoReport) {
    dependsOn = subprojects.test
    subprojects.each {
        additionalSourceDirs = files(subprojects.sourceSets.main.allSource.srcDirs)
        sourceDirectories = files(subprojects.sourceSets.main.allSource.srcDirs)
        classDirectories = files(subprojects.sourceSets.main.output)
        executionData = files(subprojects.jacocoTestReport.executionData)
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
            html.destination "build/reports/jacoco"
        }
        onlyIf = {
            true
        }
        doFirst {
            executionData = files(executionData.findAll {
                it.exists()
            })
        }
    }
}
